<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - TicketBus</title>
    <link href="~/css/brand-styles.css" rel="stylesheet" asp-append-version="true" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet" />
</head>
<body>
    @Html.AntiForgeryToken()

    <div class="brand-container">
        <!-- Header -->
        <header class="brand-header">
            <div class="header-content d-flex justify-content-between align-items-center">
                <div class="d-flex align-items-center">
                    <i class="fas fa-bus-alt fa-2x me-3 text-primary"></i>
                    <h1>@(ViewData["HeaderTitle"] != null ? new HtmlString(ViewData["HeaderTitle"].ToString()) : ViewData["Title"])</h1>
                </div>
                <div class="d-flex align-items-center">
                    @{
                        var userId = UserManager.GetUserId(User);
                        var hasBrand = userId != null && DbContext.Brands.Any(b => b.UserId == userId);
                    }
                    @if (!hasBrand)
                    {
                        <!-- Nút Đăng ký hãng xe -->
                        <a asp-area="Brand" asp-page="/RegisterCoach" class="btn btn-light me-3">
                            <i class="fas fa-building me-1"></i> Đăng ký hãng xe
                        </a>
                    }
                    <!-- Chuông thông báo -->
                    <div class="notification-bell position-relative me-3">
                        <i class="fas fa-bell fa-lg text-light" id="notificationBell" style="cursor: pointer;"></i>
                        <span id="notificationCount" class="badge bg-danger position-absolute top-0 start-100 translate-middle rounded-pill" style="display: none;">0</span>
                        <!-- Dropdown thông báo -->
                        <div class="notification-dropdown dropdown-menu p-0" id="notificationDropdown" style="min-width: 500px; max-height: 400px;">
                            <div class="dropdown-header bg-light p-2 d-flex justify-content-between align-items-center">
                                <strong>Thông báo</strong>
                                <a href="#" id="markAllAsRead" class="text-primary text-decoration-none">Đọc tất cả</a>
                            </div>
                            <div id="notificationList" class="notification-list">
                                <!-- Danh sách thông báo sẽ được cập nhật qua AJAX -->
                            </div>
                        </div>
                    </div>
                    <!-- Icon Chat -->
                    <div class="position-relative me-3">
                        <a href="@Url.Action("Chat", "Home", new { area = "Brand" })" class="text-light chat-icon" title="Chat">
                            <i class="fas fa-comments fa-lg"></i>
                            <span id="chatUnreadCount" class="unread-badge"></span>
                        </a>
                    </div>
                    <!-- Nút Logout -->
                    <form class="d-inline" asp-area="Identity"
                          asp-page="/Account/Logout"
                          asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })"
                          method="post">
                        <button type="submit" class="btn btn-danger logout-btn" style="background-color: #dc3545 !important; border: none !important; color: white !important; transition: background-color 0.3s ease, transform 0.2s ease;"
                                onmouseover="this.style.backgroundColor='#c82333'; this.style.transform='translateY(-1px);'"
                                onmouseout="this.style.backgroundColor='#dc3545'; this.style.transform='translateY(0)';">
                            <i class="fas fa-sign-out-alt me-1"></i> Đăng xuất
                        </button>
                    </form>
                </div>
            </div>
        </header>

        <!-- Nội dung chính -->
        @if (hasBrand)
        {
            @RenderBody()
        }
        else
        {
            <div class="container mt-5 text-center">
                <div class="alert alert-warning" role="alert">
                    <h4 class="alert-heading">Vui lòng đăng ký hãng xe!</h4>
                    <p>Bạn cần đăng ký một hãng xe để sử dụng các chức năng quản lý.</p>
                    <a asp-area="Brand" asp-page="/RegisterCoach" class="btn btn-primary">
                        <i class="fas fa-building me-1"></i> Đăng ký ngay
                    </a>
                </div>
            </div>
        }

        <!-- Footer -->
        <footer class="brand-footer">
            <div class="footer-content text-center">
                <a asp-area="Brand" asp-controller="Home" asp-action="GoToHomePage" class="btn btn-secondary mb-3">Quay về trang chủ</a>
                <p class="text-light mb-1">© 2025 TicketBus - Hệ thống quản lý vé xe</p>
                <p class="text-light mb-0">Liên hệ: <a href="mailto:support@ticketbus.com" class="text-light text-decoration-underline">support@ticketbus.com</a></p>
            </div>
        </footer>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/8.0.0/signalr.min.js"></script>
    <script>
        $(document).ready(function () {
            // Lấy currentUserId từ Razor
            const currentUserId = "@UserManager.GetUserId(User)";

            // Hàm tải danh sách thông báo
            function loadNotifications() {
                $.ajax({
                    url: '@Url.Action("GetNotifications", "Home", new { area = "Brand" })',
                    type: 'GET',
                    success: function (data) {
                        var notificationCount = data.unreadCount;
                        var notifications = data.notifications;

                        var notificationCountElement = $('#notificationCount');
                        if (notificationCount > 0) {
                            notificationCountElement.text(notificationCount).show();
                        } else {
                            notificationCountElement.hide();
                        }

                        var notificationList = $('#notificationList');
                        notificationList.empty();

                        if (notifications.length > 0) {
                            notifications.forEach(function (notification) {
                                var messageText = notification.message || 'Không có nội dung thông báo.';
                                var createdDate = new Date(notification.createdDate).toLocaleString('vi-VN');
                                var notificationItem = $('<div class="notification-item"></div>')
                                    .attr('data-id', notification.id);
                                if (notification.isRead) {
                                    notificationItem.addClass('read');
                                }
                                var message = $('<span class="message"></span>').text(messageText);
                                var time = $('<span class="time"></span>').text(createdDate);
                                var markAsReadForm = notification.isRead ?
                                    $('<span class="text-muted">Đã đọc</span>') :
                                    $('<form method="post" style="display:inline;"></form>')
                                        .attr('action', '@Url.Action("MarkNotificationAsRead", "Home", new { area = "Brand" })')
                                        .append($('<input type="hidden" name="id">').val(notification.id))
                                        .append($('<input type="hidden" name="__RequestVerificationToken">').val($('input[name="__RequestVerificationToken"]').val()))
                                        .append($('<button type="submit" class="btn btn-sm btn-outline-primary">Đã đọc</button>'));

                                notificationItem.append(message).append(time).append(markAsReadForm);
                                notificationList.append(notificationItem);
                            });
                        } else {
                            notificationList.append('<div class="notification-item text-center"><span>Không có thông báo mới.</span></div>');
                        }
                    },
                    error: function (xhr, status, error) {
                        console.log('Lỗi khi tải thông báo:', status, error);
                        $('#notificationList').html('<div class="notification-item text-center"><span>Lỗi tải thông báo.</span></div>');
                    }
                });
            }

            loadNotifications();

            $('#notificationBell').click(function (e) {
                e.stopPropagation();
                $('#notificationDropdown').toggleClass('show');
                loadNotifications();
            });

            $(document).click(function (e) {
                if (!$(e.target).closest('.notification-bell').length) {
                    $('#notificationDropdown').removeClass('show');
                }
            });

            $(document).on('submit', '.notification-item form', function (e) {
                e.preventDefault();
                var form = $(this);
                var notificationItem = form.closest('.notification-item');
                var notificationId = notificationItem.attr('data-id');

                $.ajax({
                    url: form.attr('action'),
                    type: 'POST',
                    data: form.serialize(),
                    success: function (response) {
                        console.log('Đánh dấu đã đọc thành công:', response);
                        if (response.success) {
                            notificationItem.addClass('read');
                            form.replaceWith('<span class="text-muted">Đã đọc</span>');

                            var currentCount = parseInt($('#notificationCount').text()) || 0;
                            if (currentCount > 0) {
                                currentCount--;
                                $('#notificationCount').text(currentCount);
                                if (currentCount === 0) {
                                    $('#notificationCount').hide();
                                }
                            }
                        } else {
                            console.log('Lỗi từ server:', response.message);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.log('Lỗi khi đánh dấu thông báo là đã đọc:', status, error);
                        console.log('Phản hồi server:', xhr.responseText);
                    }
                });
            });

            $('#markAllAsRead').click(function (e) {
                e.preventDefault();
                $.ajax({
                    url: '@Url.Action("MarkAllNotificationsAsRead", "Home", new { area = "Brand" })',
                    type: 'POST',
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (response) {
                        if (response.success) {
                            loadNotifications();
                        } else {
                            console.log('Lỗi từ server:', response.message);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.log('Lỗi khi đánh dấu tất cả thông báo:', status, error);
                        alert('Lỗi khi đánh dấu tất cả thông báo là đã đọc.');
                    }
                });
            });

            let unreadCounts = {}; // Biến để theo dõi số tin nhắn chưa đọc

            function updateChatIcon() {
                const chatUnreadCountElement = $('#chatUnreadCount');
                const totalUnread = Object.values(unreadCounts).reduce((sum, count) => sum + count, 0);
                if (totalUnread > 0) {
                    chatUnreadCountElement.addClass('show with-count').text(totalUnread);
                } else {
                    chatUnreadCountElement.removeClass('show with-count').text('');
                }
            }

            function loadUnreadMessageCount() {
                if (!currentUserId) {
                    $('#chatUnreadCount').removeClass('show with-count').text('');
                    return;
                }

                $.ajax({
                    url: '@Url.Action("GetUnreadMessageCount", "Home", new { area = "Brand" })',
                    type: 'GET',
                    success: function (data) {
                        var unreadCount = data.unreadCount || 0;
                        unreadCounts[currentUserId] = unreadCount; // Cập nhật vào unreadCounts
                        updateChatIcon();
                    },
                    error: function (xhr, status, error) {
                        console.log('Error loading unread message count:', status, error);
                        $('#chatUnreadCount').removeClass('show with-count').text('');
                    }
                });
            }

            loadUnreadMessageCount();
            setInterval(loadUnreadMessageCount, 30000);

            const connection = new signalR.HubConnectionBuilder()
                .withUrl("/chatHub")
                .build();

            connection.start()
                .then(() => {
                    console.log("SignalR connected for chat unread count");
                    connection.on("ReceiveMessage", (senderId, senderName, message, sentDate) => {
                        if (senderId !== currentUserId) {
                            $.ajax({
                                url: '@Url.Action("GetUnreadMessageCount", "Home", new { area = "Brand" })',
                                type: 'GET',
                                success: function (data) {
                                    var unreadCount = data.unreadCount || 0;
                                    unreadCounts[currentUserId] = unreadCount;
                                    updateChatIcon();
                                }
                            });
                        }
                    });
                })
                .catch(err => console.error("Lỗi khi kết nối SignalR cho chat unread count:", err));
        });
    </script>
    @RenderSection("Scripts", required: false)
</body>
</html>